load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Google Test
http_archive(
  name = "googletest",
  urls = ["https://github.com/google/googletest/archive/5ab508a01f9eb089207ee87fd547d290da39d015.zip"],
  strip_prefix = "googletest-5ab508a01f9eb089207ee87fd547d290da39d015",
)

http_archive(
    name = "rules_python",
    sha256 = "497ca47374f48c8b067d786b512ac10a276211810f4a580178ee9b9ad139323a",
    strip_prefix = "rules_python-0.16.1",
    url = "https://github.com/bazelbuild/rules_python/archive/refs/tags/0.16.1.tar.gz",
)

# Project Generator
local_repository(
    name = "bzlmodrio-gentool",
    path = "../../gentool",
)

load("@rules_python//python:pip.bzl", "pip_parse")

pip_parse(
    name = "pip",
    requirements_lock = "@bzlmodrio-gentool//:requirements_lock.txt",
)


load("@pip//:requirements.bzl", "install_deps")
install_deps()

# Roborio Toolchain
{%- if mandetory_dependencies.rules_roborio_toolchain.use_local_version %}
local_repository(
    name = "rules_roborio_toolchain",
    path = "../../rules_roborio_toolchain",
)
{% endif %}

load("@rules_roborio_toolchain//:maven_deps.bzl", "setup_legacy_setup_toolchains_dependencies")
setup_legacy_setup_toolchains_dependencies()

load("@rules_roborio_toolchain//toolchains:load_toolchains.bzl", "load_toolchains")
load_toolchains()

register_toolchains(
    "@local_roborio//:cc-toolchain-roborio",
)

# Bazelrio Rules
{%- if mandetory_dependencies.rules_bazelrio.use_local_version %}
local_repository(
    name = "rules_bazelrio",
    path = "../../bzlmodRio-rules_bazelrio",
)
{%- endif %}
{% if group.get_all_maven_dependencies() %}
# JVM External
RULES_JVM_EXTERNAL_TAG = "4.2"
RULES_JVM_EXTERNAL_SHA = "cd1a77b7b02e8e008439ca76fd34f5b07aecb8c752961f9640dea15e9e5ba1ca"
http_archive(
    name = "rules_jvm_external",
    sha256 = RULES_JVM_EXTERNAL_SHA,
    strip_prefix = "rules_jvm_external-%s" % RULES_JVM_EXTERNAL_TAG,
    url = "https://github.com/bazelbuild/rules_jvm_external/archive/%s.zip" % RULES_JVM_EXTERNAL_TAG,
)

load("@rules_jvm_external//:defs.bzl", "maven_install")

{%- endif %}
{% for name, module_dep in group.module_dependencies.items() %}
# {{name}}
local_repository(
    name = "{{name}}",
    path = "../..",
)

load("@{{name}}//:maven_cpp_deps.bzl", "setup_legacy_{{module_dep.container.sanitized_repo_name}}_cpp_dependencies")
{%- if module_dep.container.get_all_maven_dependencies() %}
load("@{{name}}//:maven_java_deps.bzl", "get_{{module_dep.container.sanitized_repo_name}}_java_dependencies")
{%- endif %}
setup_legacy_{{module_dep.container.sanitized_repo_name}}_cpp_dependencies()



{%- endfor %}

# My repository!
local_repository(
    name = "{{group.repo_name}}",
    path = "../",
)

load("@{{group.repo_name}}//:maven_cpp_deps.bzl", "setup_legacy_{{group.sanitized_repo_name}}_cpp_dependencies")
setup_legacy_{{group.sanitized_repo_name}}_cpp_dependencies()
{% if group.get_all_maven_dependencies() %}
load("@{{group.repo_name}}//:maven_java_deps.bzl", "get_{{group.sanitized_repo_name}}_java_dependencies")
maven_artifacts, maven_repositories = get_{{group.sanitized_repo_name}}_java_dependencies()
{%- endif %}
{% if group.get_all_maven_dependencies() %}

# Add depdency java artifacts
{%- for name, module_dep in group.module_dependencies.items() %}
{%- if module_dep.container.get_all_maven_dependencies() %}
dep_maven_artifacts, dep_maven_repositories = get_{{module_dep.container.sanitized_repo_name}}_java_dependencies()
maven_artifacts += dep_maven_artifacts
maven_repositories += dep_maven_repositories
{%- endif %}
{% endfor %}

# Add junit
maven_artifacts += [
        "org.junit.jupiter:junit-jupiter-api:5.8.2",
        "org.junit.jupiter:junit-jupiter-params:5.8.2",
        "org.junit.jupiter:junit-jupiter-engine:5.8.2",
        "org.junit.platform:junit-platform-commons:1.6.1",
        "org.junit.platform:junit-platform-console:1.6.1",
        "org.junit.platform:junit-platform-engine:1.6.1",
        "org.junit.platform:junit-platform-launcher:1.6.1",
        "org.junit.platform:junit-platform-suite-api:1.6.1",
]

maven_install(
    name = "maven",
    artifacts = maven_artifacts,
    repositories = maven_repositories,
    # maven_install_json = "//build_scripts/bazel/deps:maven_install.json",
)
{%- endif %}