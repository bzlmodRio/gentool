{%- if target.get_shared_library_select() != "," -%}
cc_library(
    name = "shared",
    linkstatic = 1,
    {%- if target.get_shared_incompatible_targets() %}
    target_compatible_with = select({
        {%- for toolchain in target.get_shared_incompatible_targets() %}
        "{{toolchain}}": ["@platforms//:incompatible"],
        {%- endfor %}
        "//conditions:default": [],
    }),
    {%- endif %}
    visibility = ["@{{group.repo_name}}//:__subpackages__"],
    deps = {% if target.headers %}["@{{target.get_header_archive_name()}}//:headers"] + {% endif %}select({
{{target.get_shared_library_select()}}
    }),
)
{%+ endif %}
{%- if target.get_static_library_select() != "," %}
cc_library(
    name = "static",
    linkstatic = 1,
    {%- if target.get_static_incompatible_targets() %}
    target_compatible_with = select({
        {%- for toolchain in target.get_static_incompatible_targets() %}
        "{{toolchain}}": ["@platforms//:incompatible"],
        {%- endfor %}
        "//conditions:default": [],
    }),
    {%- endif %}
    visibility = ["@{{group.repo_name}}//:__subpackages__"],
    deps = {% if target.headers %}["@{{target.get_header_archive_name()}}//:headers"] + {% endif %}select({
{{target.get_static_library_select()}}
    }),
)
{%- endif %}
{%- if target.has_jni %}

cc_library(
    name = "jni",
    linkstatic = 1,
    {%- if target.get_jni_incompatible_targets() %}
    target_compatible_with = select({
        {%- for toolchain in target.get_jni_incompatible_targets() %}
        "{{toolchain}}": ["@platforms//:incompatible"],
        {%- endfor %}
        "//conditions:default": [],
    }),
    {%- endif %}
    visibility = ["@{{group.repo_name}}//:__subpackages__"],
    deps = {% if target.headers %}["@{{target.get_header_archive_name()}}//:headers"] + {% endif %}select({
{{target.get_jni_shared_library_select()}}
    }),
)
{%- endif %}

