load("@rules_jvm_external//:defs.bzl", "maven_install")
load("@rules_jvm_external//:repositories.bzl", "rules_jvm_external_deps")
load("@rules_jvm_external//:specs.bzl", "maven")
{% if group.has_protobuf %}
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
{% endif %}
{% if group.is_python %}
load("@rules_python//python:pip.bzl", "pip_parse", "package_annotation")
{% endif %}

def load_{{ group.short_name }}_dependencies():
    {% if group.has_protobuf %}
    rules_proto_dependencies()
    rules_proto_toolchains()
    {% endif %}
    {% if group.is_java %}
    rules_jvm_external_deps()
    maven_install(
        name = "{{group.repo_name}}_dependencies",
        artifacts = [
        {%- for maven_dep in group.get_all_maven_dependencies2() %}
        "{{maven_dep[0]}}:{{maven_dep[1]}}",
        {%- endfor %}
        ],
        repositories = [
            "https://repo1.maven.org/maven2",
            "https://repo.maven.apache.org/maven2/",
        ],
        maven_install_json = "@{{group.repo_name}}//:{{group.repo_name}}_dependencies_install.json",
    )
    {% endif %}
    {% if group.is_python %}
    ANNOTATIONS = {
        "dataclasses": package_annotation(
            srcs_exclude_glob = ["site-packages/dataclasses.py"],
        ),
    }

    pip_parse(
        name = "rules_wpiformat_pip",
        annotations = ANNOTATIONS,
        requirements_lock = "@rules_wpiformat//:requirements_lock.txt",
        requirements_windows = "@rules_wpiformat//:requirements_windows.txt",
    )
    {% endif %}

