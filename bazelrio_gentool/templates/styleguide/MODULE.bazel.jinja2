module(
    name = "{{group.repo_name}}",
    version = "{{group.sanitized_version}}{{group.patch}}",
    compatibility_level = {{group.year}},
)
{% if group.is_java %}
bazel_dep(name = "rules_java", version = "{{bazel_dependencies.rules_java.version}}")
bazel_dep(name = "rules_jvm_external", version = "{{bazel_dependencies.rules_jvm_external.version}}")
{% endif %}
{% if group.is_python %}
bazel_dep(name = "rules_python", version = "{{bazel_dependencies.rules_python.version}}")

python = use_extension("@rules_python//python:extensions.bzl", "python")
python.toolchain(
    name = "python3_10",
    python_version = "3.10",
)
use_repo(python, "python3_10_toolchains")

register_toolchains(
    "@python3_10_toolchains//:all",
)
{% endif %}
{% if group.has_protobuf %}
bazel_dep(name = "rules_proto", version = "{{bazel_dependencies.rules_proto.version}}")
{% endif %}

{% if group.is_java %}
maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    name = "{{group.repo_name}}_dependencies",
    artifacts = [
        {%- for maven_dep in group.get_all_maven_dependencies2() %}
        "{{maven_dep[0]}}:{{maven_dep[1]}}",
        {%- endfor %}
    ],
    lock_file = "@{{group.repo_name}}//:{{group.repo_name}}_dependencies_install.json",
    repositories = [
        "https://repo1.maven.org/maven2",
        "https://repo.maven.apache.org/maven2/",
    ],
)
use_repo(
    maven,
    "{{group.repo_name}}_dependencies",
)
{% endif %}
{% if group.is_python %}
pip = use_extension("@rules_python//python:extensions.bzl", "pip")
pip.parse(
    name = "rules_wpiformat_pip",
    requirements_lock = "//:requirements_lock.txt",
    requirements_windows = "//:requirements_windows.txt",
)
use_repo(pip, "rules_wpiformat_pip")

{% endif %}
