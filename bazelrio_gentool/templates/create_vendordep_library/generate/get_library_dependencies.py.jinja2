import os

from bazelrio_gentool.load_vendordep_dependency import vendordep_dependency
from get_allwpilib_dependencies import get_allwpilib_dependencies
from bazelrio_gentool.deps.dependency_container import (
    ModuleDependency,
)


def get_{{library_name}}_dependencies(
    use_local_allwpilib=False, use_local_opencv=False, use_local_ni=True
):
    SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))
    group = vendordep_dependency(
        "bzlmodrio-{{library_name}}",
        os.path.join(SCRIPT_DIR, f"vendor_dep.json"),
        year=2023,
        fail_on_hash_miss={{fail_on_hash_miss}},
        has_static_libraries={{has_static_libraries}},
    )

    allwpilib_dependency = ModuleDependency(
        get_allwpilib_dependencies(
            use_local_opencv=use_local_opencv, use_local_ni=use_local_ni
        ),
        use_local_version=use_local_allwpilib,
        local_rel_folder="../../libraries/bzlmodRio-allwpilib",
        remote_repo="bzlmodRio-allwpilib",
    )
    group.add_module_dependency(allwpilib_dependency)

    {% if group.cc_deps %}
    group.add_cc_meta_dependency(
        "{{library_name}}-cpp",
        deps=[
    {%- for cc_dep in group.cc_deps %}
            "{{cc_dep.name}}",
    {%- endfor %}
            "wpilibc-cpp",
        ],
        platform_deps={},
        jni_deps={
            # TODO
        },
    )
    {% endif %}
    
    {% if group.java_deps %}
    group.add_java_meta_dependency(
        "{{library_name}}-java",
        group_id=f"{{group.java_deps[0].group_id}}"
        deps=[
    {%- for java_dep in group.java_deps %}
            "{{java_dep.name}}",
    {%- endfor %}
        ],
    )
    {% endif %}
    
    return group
